mu_x <- mean(galton_heights$father) #example of x
mu_y <- mean(galton_heights$son) #example of y
s_x <- sd(galton_heights$father) #example of x
s_y <- sd(galton_heights$son) #example of y
r <- cor(galton_heights$father, galton_heights$son) #cor between x and y
m_1 <-  r * s_y / s_x 
b_1 <- mu_y - m_1*mu_x
m_2 <-  r * s_x / s_y
b_2 <- mu_x - m_2*mu_y



ps <- seq(0, 1, 0.1)
dat %>% 
   mutate(g = cut(x, quantile(x, ps), include.lowest = TRUE)) %>%  
   group_by(g) %>%  
   summarize(y = mean(y), x = mean(x)) %>%
    qplot(x, y, data =.)

#Linear Regression for Prediction
library(tidyverse)
library(HistData)

galton_heights <- GaltonFamilies %>%
  filter(childNum == 1 & gender == "male") %>%
  select(father, childHeight) %>%
  rename(son = childHeight)

library(caret)
y <- galton_heights$son
test_index <- createDataPartition(y, times = 1, p = 0.5, list = FALSE)

train_set <- galton_heights %>% slice(-test_index)
test_set <- galton_heights %>% slice(test_index)

avg <- mean(train_set$son)
avg

mean((avg - test_set$son)^2)

# fit linear regression model
fit <- lm(son ~ father, data = train_set)
fit$coef

y_hat <- fit$coef[1] + fit$coef[2]*test_set$father
mean((y_hat - test_set$son)^2)


#RMSE
# set.seed(1) # if using R 3.5 or earlier
set.seed(1, sample.kind="Rounding") # if using R 3.6 or later
rmse <- replicate(100, {
	test_index <- createDataPartition(dat$y, times = 1, p = 0.5, list = FALSE)
	train_set <- dat %>% slice(-test_index)
	test_set <- dat %>% slice(test_index)
	fit <- lm(y ~ x, data = train_set)
 	y_hat <- predict(fit, newdata = test_set)
	sqrt(mean((y_hat-test_set$y)^2))
})

mean(rmse)
sd(rmse)
